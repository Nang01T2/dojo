// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using net_core_mssql.Data;

namespace net_core_mssql.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210105160520_FinalSeeding")]
    partial class FinalSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("net_core_mssql.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defense = 10,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defense = 5,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("net_core_mssql.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("net_core_mssql.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("net_core_mssql.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 243, 61, 135, 86, 254, 239, 214, 154, 252, 56, 179, 4, 157, 111, 149, 65, 165, 125, 81, 9, 174, 8, 232, 125, 160, 248, 199, 70, 194, 83, 61, 161, 12, 243, 62, 219, 152, 155, 96, 92, 215, 69, 161, 45, 124, 36, 8, 18, 148, 211, 212, 147, 107, 184, 11, 64, 192, 199, 245, 35, 126, 5, 227, 29 },
                            PasswordSalt = new byte[] { 9, 41, 206, 44, 101, 147, 82, 15, 78, 85, 47, 88, 242, 29, 165, 5, 36, 135, 125, 198, 118, 194, 170, 188, 136, 232, 198, 188, 167, 97, 38, 49, 114, 60, 205, 85, 53, 5, 253, 86, 79, 94, 82, 40, 248, 95, 24, 158, 164, 38, 25, 166, 201, 242, 222, 84, 184, 172, 22, 100, 233, 33, 157, 165, 178, 37, 32, 221, 8, 216, 139, 64, 149, 200, 212, 115, 210, 152, 203, 180, 243, 28, 88, 145, 1, 118, 247, 224, 33, 174, 57, 7, 193, 129, 143, 146, 149, 227, 210, 212, 43, 186, 6, 240, 70, 2, 9, 114, 94, 108, 47, 246, 53, 14, 231, 246, 248, 130, 80, 61, 169, 73, 156, 230, 63, 245, 158, 76 },
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 243, 61, 135, 86, 254, 239, 214, 154, 252, 56, 179, 4, 157, 111, 149, 65, 165, 125, 81, 9, 174, 8, 232, 125, 160, 248, 199, 70, 194, 83, 61, 161, 12, 243, 62, 219, 152, 155, 96, 92, 215, 69, 161, 45, 124, 36, 8, 18, 148, 211, 212, 147, 107, 184, 11, 64, 192, 199, 245, 35, 126, 5, 227, 29 },
                            PasswordSalt = new byte[] { 9, 41, 206, 44, 101, 147, 82, 15, 78, 85, 47, 88, 242, 29, 165, 5, 36, 135, 125, 198, 118, 194, 170, 188, 136, 232, 198, 188, 167, 97, 38, 49, 114, 60, 205, 85, 53, 5, 253, 86, 79, 94, 82, 40, 248, 95, 24, 158, 164, 38, 25, 166, 201, 242, 222, 84, 184, 172, 22, 100, 233, 33, 157, 165, 178, 37, 32, 221, 8, 216, 139, 64, 149, 200, 212, 115, 210, 152, 203, 180, 243, 28, 88, 145, 1, 118, 247, 224, 33, 174, 57, 7, 193, 129, 143, 146, 149, 227, 210, 212, 43, 186, 6, 240, 70, 2, 9, 114, 94, 108, 47, 246, 53, 14, 231, 246, 248, 130, 80, 61, 169, 73, 156, 230, 63, 245, 158, 76 },
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("net_core_mssql.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("net_core_mssql.Models.Character", b =>
                {
                    b.HasOne("net_core_mssql.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("net_core_mssql.Models.CharacterSkill", b =>
                {
                    b.HasOne("net_core_mssql.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("net_core_mssql.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("net_core_mssql.Models.Weapon", b =>
                {
                    b.HasOne("net_core_mssql.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("net_core_mssql.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("net_core_mssql.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("net_core_mssql.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("net_core_mssql.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
